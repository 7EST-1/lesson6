Testing Theory
===============

There are many goals to achieve when testing a program

1) Complete Code Coverage
=========================
- Not every line of code in a program runs every time. The goal of
complete code coverage is to test enough times to ensure every line gets
executed (run) at least once.

2) Testing Boundary Conditions
==============================
- Use data that falls right around the limit of certain boundaries
-Ex --> just below, just at and just above particular requirements found
in loops and if statements

3) Testing Extreme Conditions
=============================
- Use data that falls very far outside the required limits
- Ex --> try paying the employee $1000 / hour or 200 hours of work
-Ensure that program responds appropriately to this data

4) Testing Efficiency
=====================
- We want to avoid using data sets that take us down identical paths of
 execution in the code. Once an area is tested we don't need further
data that tests the same thing.
Equivalence Class (Category) - When 2 sets of data follow the same path 
in a program, they belong to the same equivalence class.
Ex --> Type 1 50 hours      Type 1 employee 48 hours


Testing log
=================
test #                  Desc                          Expected                        Result
========               ==========                    ===========                   =============
1 (code coverage)      rate:10,type,hours30              300
2 (code coverage)      rate:10,type,hours50           400+200=600

3 (boundary)      r:10, t:1 h:39,40,41                 OT only for 41

4 (extreme)      rate:10,type:1,hours0 168                hours not set

5 (boundary)    r: t: 1 6.49,6.50,30.50,30.51 h:10     rate only set #2&3

6 (boundary)    r: 10  t:2    h: 0,1,60,61       hours only set for #2&3

7 (boundary)    r:10 tL0,1,2,3 h:10              type only set for #2 and #3
